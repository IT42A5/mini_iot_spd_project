name: Python Flask Continuous Integration

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:

  linting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Install linting tools
      run: |
        pip install flake8
        pip install pylint
    
    - name: Linting with flake8
      run: flake8 app/

    - name: Linting with pylint
      run: pylint app/

  unittest:
    needs: linting
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: pip install -r requirements.txt
      
    - name: Run tests
      run: python -m unittest discover -s tests

  build:
    needs: [linting, unittest]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GIT_USERNAME }} --password-stdin

    - name: Set up Docker
      uses: docker/setup-docker-action@v4
      with:
        daemon-config: |
          {
            "debug": true,
            "features": {
              "containerd-snapshotter": true
            }
          }

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/${{ secrets.GIT_USERNAME }}/${{ secrets.GIT_REPO }}:latest